{"ast":null,"code":"var _jsxFileName = \"/home/natoliv/GitHub/ProjetosGitHub/calculadora_signos/calculadora-signos/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n// Cria o componente SignCalculator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignCalculator = () => {\n  _s();\n  // Define o estado inicial para a data, o signo e o erro\n  const [date, setDate] = useState(\"\");\n  const [sign, setSign] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Define a função handleSubmit para ser executada ao submeter o formulário\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Previne o comportamento padrão de submissão do formulário\n\n    // Verifica se a data inserida é válida\n    if (!isDateValid(date)) {\n      setError(\"Data inválida\");\n      setSign(\"\");\n      return;\n    }\n    // Extrai o mês e o dia da data inserida\n    const month = parseInt(date.split(\"-\")[1]);\n    const day = parseInt(date.split(\"-\")[2]);\n\n    // Criando uma lista com as informações dos signos, contendo nome, data de início e fim\n    const signList = [{\n      name: \"Aquário\",\n      start: [1, 20],\n      end: [2, 18]\n    }, {\n      name: \"Peixes\",\n      start: [2, 19],\n      end: [3, 20]\n    }, {\n      name: \"Áries\",\n      start: [3, 21],\n      end: [4, 19]\n    }, {\n      name: \"Touro\",\n      start: [4, 20],\n      end: [5, 20]\n    }, {\n      name: \"Gêmeos\",\n      start: [5, 21],\n      end: [6, 20]\n    }, {\n      name: \"Câncer\",\n      start: [6, 21],\n      end: [7, 22]\n    }, {\n      name: \"Leão\",\n      start: [7, 23],\n      end: [8, 22]\n    }, {\n      name: \"Virgem\",\n      start: [8, 23],\n      end: [9, 22]\n    }, {\n      name: \"Libra\",\n      start: [9, 23],\n      end: [10, 22]\n    }, {\n      name: \"Escorpião\",\n      start: [10, 23],\n      end: [11, 21]\n    }, {\n      name: \"Sagitário\",\n      start: [11, 22],\n      end: [12, 21]\n    }, {\n      name: \"Capricórnio\",\n      start: [12, 22],\n      end: [1, 19]\n    }];\n    // Encontrando as informações do signo da pessoa com a função find() e a lista de signos criada acima\n    const signInfo = signList.find(sign => month === sign.start[0] && day >= sign.start[1] || month === sign.end[0] && day <= sign.end[1]);\n    // Atualiza o estado do signo e limpa o estado do erro\n    setSign(signInfo.name);\n    setError(\"\");\n  };\n  // Define a função isDateValid para verificar se a data inserida é válida\n  const isDateValid = dateString => {\n    // Criando um objeto Date a partir da string da data\n    const dateObj = new Date(dateString);\n    // Verificando se a string é válida, se o ano é maior que 1900 e se o ano é menor que o ano atual\n    return dateString && !isNaN(dateObj.getTime()) && dateObj.getFullYear() > 1900 && dateObj.getFullYear() < new Date().getFullYear();\n  };\n  // Renderiza o componente com o formulário, a mensagem de erro (se houver) e o signo (se houver)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"De qual signo voc\\xEA \\xE9?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthdate\",\n        children: [\"Data de nascimento:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), sign && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sign\",\n      children: [\"Seu signo \\xE9 \", sign, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SignCalculator, \"WTkfSfHEL32Ap5RXBsIfOaDV1zA=\");\n_c = SignCalculator;\nexport default SignCalculator;\nvar _c;\n$RefreshReg$(_c, \"SignCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignCalculator","_s","date","setDate","sign","setSign","error","setError","handleSubmit","e","preventDefault","isDateValid","month","parseInt","split","day","signList","name","start","end","signInfo","find","dateString","dateObj","Date","isNaN","getTime","getFullYear","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","className","_c","$RefreshReg$"],"sources":["/home/natoliv/GitHub/ProjetosGitHub/calculadora_signos/calculadora-signos/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n// Cria o componente SignCalculator\nconst SignCalculator = () => {\n  // Define o estado inicial para a data, o signo e o erro\n  const [date, setDate] = useState(\"\");\n  const [sign, setSign] = useState(\"\");\n  const [error, setError] = useState(\"\");\n// Define a função handleSubmit para ser executada ao submeter o formulário\n  const handleSubmit = (e) => {\n    e.preventDefault();\n// Previne o comportamento padrão de submissão do formulário\n\n// Verifica se a data inserida é válida\n    if (!isDateValid(date)) {\n      setError(\"Data inválida\");\n      setSign(\"\");\n      return;\n    }\n// Extrai o mês e o dia da data inserida\n    const month = parseInt(date.split(\"-\")[1]);\n    const day = parseInt(date.split(\"-\")[2]);\n\n// Criando uma lista com as informações dos signos, contendo nome, data de início e fim\n    const signList = [\n      { name: \"Aquário\", start: [1, 20], end: [2, 18] },\n      { name: \"Peixes\", start: [2, 19], end: [3, 20] },\n      { name: \"Áries\", start: [3, 21], end: [4, 19] },\n      { name: \"Touro\", start: [4, 20], end: [5, 20] },\n      { name: \"Gêmeos\", start: [5, 21], end: [6, 20] },\n      { name: \"Câncer\", start: [6, 21], end: [7, 22] },\n      { name: \"Leão\", start: [7, 23], end: [8, 22] },\n      { name: \"Virgem\", start: [8, 23], end: [9, 22] },\n      { name: \"Libra\", start: [9, 23], end: [10, 22] },\n      { name: \"Escorpião\", start: [10, 23], end: [11, 21] },\n      { name: \"Sagitário\", start: [11, 22], end: [12, 21] },\n      { name: \"Capricórnio\", start: [12, 22], end: [1, 19] },\n    ];\n    // Encontrando as informações do signo da pessoa com a função find() e a lista de signos criada acima\n    const signInfo = signList.find(\n      (sign) =>\n        (month === sign.start[0] && day >= sign.start[1]) ||\n        (month === sign.end[0] && day <= sign.end[1])\n    );\n// Atualiza o estado do signo e limpa o estado do erro\n    setSign(signInfo.name);\n    setError(\"\");\n  };\n// Define a função isDateValid para verificar se a data inserida é válida\n  const isDateValid = (dateString) => {\n    // Criando um objeto Date a partir da string da data\n    const dateObj = new Date(dateString);\n    // Verificando se a string é válida, se o ano é maior que 1900 e se o ano é menor que o ano atual\n    return (\n      dateString &&\n      !isNaN(dateObj.getTime()) &&\n      dateObj.getFullYear() > 1900 &&\n      dateObj.getFullYear() < new Date().getFullYear()\n    );\n  };\n// Renderiza o componente com o formulário, a mensagem de erro (se houver) e o signo (se houver)\n\n  return (\n    <div class=\"container\">\n      <h1>De qual signo você é?</h1>\n\n      <form onSubmit={handleSubmit}>\n    <label htmlFor=\"birthdate\">\n      Data de nascimento:\n          <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n        </label>\n        <button type=\"submit\">Calcular</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n      {sign && <p className=\"sign\">Seu signo é {sign}.</p>}\n    </div>\n  );\n};\n\nexport default SignCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}